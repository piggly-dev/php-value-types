<?php
namespace Piggly\Tests\ValueTypes\Advanced;

use PHPUnit\Framework\TestCase;
use Piggly\ValueTypes\Advanced\PhoneType;

/**
 * @coversDefaultClass \Piggly\ValueTypes\Advanced\PhoneType
 */
class PhoneTypeTest extends TestCase
{
	/**
	 * Assert if $value is validated as $expected.
	 *
	 * @covers ::validate
	 * @covers ::assert
	 * @covers ::__construct
	 * @dataProvider dataValues
	 * @test Expecting positive assertion.
	 * @param boolean $expected Expected result.
	 * @param boolean $value Value to validate
	 * @return boolean
	 */
	public function canValidate ( bool $expected, string $value )
	{ $this->assertEquals($expected, (new PhoneType($value))->validate()); }

	/**
	 * Assert if $value is masked as $expected.
	 *
	 * @covers ::masked
	 * @covers ::__construct
	 * @dataProvider dataToMask
	 * @test Expecting positive assertion.
	 * @param string $expected Expected result.
	 * @param string $value Value to validate
	 * @return boolean
	 */
	public function canMask ( string $expected, string $value, bool $keepLenght = true )
	{ $this->assertEquals($expected, (new PhoneType($value))->masked($keepLenght)); }

	/**
	 * A list with random values to validate.
	 * Provider to canValidate() method.
	 * - Generated by fakerphp.
	 * @return array
	 */
	public function dataValues () : array
	{
		$arr = [];
		$faker = \Faker\Factory::create();

		for ( $i = 0; $i < 50; $i++ )
		{ $arr[] = [true, $faker->phoneNumber()]; }

		return $arr;
   }

	/**
	 * A list with random values to mask.
	 * Provider to canMask() method.
	 * - Generated by fakerphp.
	 * @return array
	 */
	public function dataToMask () : array
	{
		return [
			['******317','90698-8317'],
			['******095','96103-0095'],
			['******418','91035-9418'],
			['*****251','4980-4251'],
			['*****790','2030-1790'],
			['******355','92208-1355'],
			['******538','99932-8538'],
			['******134','91826-9134'],
			['*****678','4154-9678'],
			['******067','98235-5067'],
			['******957','98768-2957'],
			['*****109','3585-4109'],
			['******408','94442-0408'],
			['******716','92845-1716'],
			['******302','93340-6302'],
			['******169','91953-7169'],
			['*****785','2198-6785'],
			['******071','90647-0071'],
			['******185','95755-2185'],
			['******349','95023-9349'],
			['*****957','2281-0957'],
			['*****062','3769-4062'],
			['******457','94132-0457'],
			['******566','97049-1566'],
			['******513','91661-5513'],
			['*****345','2508-0345'],
			['******398','92005-3398'],
			['*****787','2613-4787'],
			['******328','91773-8328'],
			['*****671','3222-3671'],
			['******504','96026-4504'],
			['******801','97166-7801'],
			['******293','95868-8293'],
			['******308','95897-6308'],
			['******409','98302-2409'],
			['*****448','2451-8448'],
			['******551','98470-8551'],
			['*****118','4426-0118'],
			['******009','90731-2009'],
			['******181','93266-0181'],
			['******510','92760-6510'],
			['******543','92581-7543'],
			['*****756','2000-8756'],
			['******743','93639-1743'],
			['******154','91798-4154'],
			['******122','98884-8122'],
			['*****317','3376-5317'],
			['******125','95130-7125'],
			['******995','97980-5995'],
			['*****337','3352-1337'],
			['*816','4831-1816', false],
			['*638','3868-8638', false],
			['*972','95567-1972', false],
			['*517','99956-6517', false],
			['*678','91160-2678', false],
			['*848','94856-9848', false],
			['*267','90694-3267', false],
			['*697','96196-1697', false],
			['*789','98321-7789', false],
			['*168','3143-5168', false],
			['*530','92620-0530', false],
			['*007','91561-2007', false],
			['*267','92097-1267', false],
			['*337','3808-3337', false],
			['*292','2886-7292', false],
			['*356','4173-6356', false],
			['*480','95795-9480', false],
			['*170','2427-0170', false],
			['*166','95937-4166', false],
			['*366','4726-2366', false],
			['*981','98781-8981', false],
			['*786','3143-3786', false],
			['*144','98151-9144', false],
			['*826','4353-2826', false],
			['*049','2429-2049', false],
			['*058','93402-3058', false],
			['*000','3626-3000', false],
			['*831','4034-4831', false],
			['*917','3323-5917', false],
			['*584','3942-3584', false],
			['*992','98954-5992', false],
			['*212','4625-5212', false],
			['*095','3869-0095', false],
			['*780','94010-7780', false],
			['*872','2088-5872', false],
			['*325','3806-9325', false],
			['*102','98551-1102', false],
			['*414','2280-3414', false],
			['*171','95717-9171', false],
			['*793','95517-3793', false],
			['*908','96577-0908', false],
			['*155','97260-5155', false],
			['*028','92694-0028', false],
			['*927','4814-5927', false],
			['*307','93696-0307', false],
			['*020','93430-7020', false],
			['*184','90857-6184', false],
			['*523','90524-2523', false],
			['*671','91312-5671', false],
			['*820','91641-8820', false],
		];
   }
}